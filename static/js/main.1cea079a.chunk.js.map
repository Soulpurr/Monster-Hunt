{"version":3,"sources":["logo.svg","Components/Cardlist/Cards/card.component.js","Components/Cardlist/Card-list.components.js","App.js","reportWebVitals.js","index.js"],"names":["Cards","props","className","src","monster","id","alt","name","email","Cardlist","console","log","monsters","map","App","state","searchfield","handlechange","bind","fetch","then","response","json","users","setState","e","this","target","value","filteredmonsters","filter","toLowerCase","includes","style","fontFamily","display","justifyContent","type","placeholder","onChange","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAAe,I,kBCEFA,EAAQ,SAACC,GACpB,OACE,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,8BAAwEC,IAAI,KAClF,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,YCJXC,EAAW,SAACR,GAEvB,OADAS,QAAQC,IAAIV,GAEV,mCACE,qBAAKC,UAAU,YAAf,SAA4BD,EAAMW,SAASC,KAAI,SAACT,GAAD,OACzC,cAAC,EAAD,CAAwBA,QAASA,GAArBA,EAAQC,YCLXS,E,kDACnB,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXH,SAAU,GACVI,YAAa,IAEf,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBANR,E,qDAQd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKC,SAAS,CAAEZ,SAAUW,S,0BAE/C,SAAaE,GACXC,KAAKF,SAAS,CAAER,YAAaS,EAAEE,OAAOC,U,oBAExC,WACE,MAAkCF,KAAKX,MAA/BH,EAAR,EAAQA,SAAUI,EAAlB,EAAkBA,YACZa,EAAmBjB,EAASkB,QAAO,SAAC1B,GAAD,OACvCA,EAAQG,KAAKwB,cAAcC,SAAShB,EAAYe,kBAGlD,OACE,qCACE,oBACEE,MAAO,CACLC,WAAY,UACZC,QAAS,OACTC,eAAgB,UAJpB,0BASA,qBAAKH,MAAO,CAAEE,QAAS,OAAQC,eAAgB,UAA/C,SACE,uBACEC,KAAK,SACLC,YAAY,kBACZC,SAAUb,KAAKT,iBAGnB,cAAC,EAAD,CAAUL,SAAUiB,W,GAzCKW,aCSlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1cea079a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\nimport \"./card.style.css\";\r\nexport const Cards = (props) => {\r\n  return (\r\n    <div className=\"card-container\">\r\n    <img src={`https://robohash.org/${props.monster.id}.png?set=set2&size=180x180`} alt=\"\" />\r\n      <h1>{props.monster.name}</h1>\r\n      <p>{props.monster.email}</p> \r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport \"./Card-list.style.css\";\r\nimport { Cards } from \"./Cards/card.component\";\r\nexport const Cardlist = (props) => {\r\n  console.log(props);\r\n  return (\r\n    <>\r\n      <div className=\"Card-list\">{props.monsters.map((monster) => (\r\n            <Cards key={monster.id} monster={monster}></Cards>\r\n          ))}</div>\r\n    </>\r\n  );\r\n};\r\n","import logo from \"./logo.svg\";\nimport React, { Component } from \"react\";\nimport { Cardlist } from \"./Components/Cardlist/Card-list.components\";\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchfield: \"\",\n    };\n    this.handlechange = this.handlechange.bind(this); //with the help of arrow fxn we do not need to use bind\n  }\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n  handlechange(e) {\n    this.setState({ searchfield: e.target.value });\n  }\n  render() {\n    const { monsters, searchfield } = this.state;\n    const filteredmonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchfield.toLowerCase())\n    );\n\n    return (\n      <>\n        <h1\n          style={{\n            fontFamily: \"cursive\",\n            display: \"flex\",\n            justifyContent: \"center\",\n          }}\n        >\n          Monster Hunt\n        </h1>\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <input\n            type=\"search\"\n            placeholder=\"Search monsters\"\n            onChange={this.handlechange}\n          />\n        </div>\n        <Cardlist monsters={filteredmonsters}></Cardlist>\n      </>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}